
local xeninjectbase = function(a) 
    rconsoleprint("@@RED@@") 
    rconsoleprint(gay) 
end
local xen, xencammisc, xensilmisc = nil, nil, nil





rconsolename("Encrypted V2 | xen#9999")
function xenmain()
xeninjectbase([[

                                  ___                       _    __   _____ 
                                  | __|_ _  __ _ _ _  _ _ __| |_  \ \ / /_  )
                                  | _|| ' \/ _| '_| || | '_ \  _|  \ V / / / 
                                  |___|_||_\__|_|  \_, | .__/\__|   \_/ /___|
                                                    |__/|_|                   


        made by xen#9999 . best internal
     

                                [1] Tracer Settings
                                [2] Silent-Aim Settings
                                [3] Misc Settings

                                [X] Exit
]])
xen = rconsoleinput("")
xenresponse()
end
rconsolename("Tracer Settings | xen#9999")
function xencamisx()
xeninjectbase([[

                                  ___                       _    __   _____ 
                                  | __|_ _  __ _ _ _  _ _ __| |_  \ \ / /_  )
                                  | _|| ' \/ _| '_| || | '_ \  _|  \ V / / / 
                                  |___|_||_\__|_|  \_, | .__/\__|   \_/ /___|
                                                    |__/|_|                   
         
                                              [Tracer Settings]                                       
                                                                            
                                                                      
                                        [1] Enabled / Disable Tracer []] .. ..[[]
                                        [2] Enabled / Disable ClosetPart []] .. ..[[]
                                        [9] Predict Movement []] .. ..[[]
                                        [9] Prediction Velocity []] .. ..[[]
                                        [3] Disable Target Death []] .. ..[[]
                                        [4] Disable Local Death []] .. ..[[]
                                        [10] FOV RADIUS []] .. ..[[]
                                        [11] Keybind []] .. ..[[]
                                        
                                        
                                        [G] More Settings []] .. ..[[]
                                        [X] Go back to main menu
]])
xencammisc = rconsoleinput("")
xencammiscresponse()
end

rconsolename("Tracer-Settings | xen#9999")
function tokyocamset()
xeninjectbase([[

                                  ___                       _    __   _____ 
                                  | __|_ _  __ _ _ _  _ _ __| |_  \ \ / /_  )
                                  | _|| ' \/ _| '_| || | '_ \  _|  \ V / / / 
                                  |___|_||_\__|_|  \_, | .__/\__|   \_/ /___|
                                                    |__/|_|                   

                                              [Tracer Settings]                                  
                                                                      
                                                                       
                                       [0] UseShake []] .. ..[[]                              
                                       [1] Shake Vaule []] .. ..[[]
                                       [2] WallCheck []] .. ..[[]
                                       [3] Check if K/O []] .. ..[[]
                                       [4] Tracer FOV []] .. ..[[]
                                       [5] Use Circle Radius []] .. ..[[]
                                       [6] Disable Out Side Circle []] .. ..[[]
                                        
                                        
                                        [X] Go back to tracer settings
]])
xentracer2 = rconsoleinput("")
aoricammiscresponse()
end

rconsolename("Silent-Aim | xen#9999")
function xenmisc()
xeninjectbase([[

                                  ___                       _    __   _____ 
                                  | __|_ _  __ _ _ _  _ _ __| |_  \ \ / /_  )
                                  | _|| ' \/ _| '_| || | '_ \  _|  \ V / / / 
                                  |___|_||_\__|_|  \_, | .__/\__|   \_/ /___|
                                                    |__/|_|                   

                                                                                                     
                                            [Silent-Aim Settings]                                     
                                                                                                 

                                        [0] Enable / Disable Silent-Aim []] .. ..[[]
                                        [1] Prediction Value []] .. ..[[]
                                        [2] Prediction []] .. ..[[]
                                        [3] Wall Check []] .. ..[[]
                                        [4] K.O Check []] .. ..[[]
                                        [5] Change FOV Radius []] .. ..[[]
                                        [6] Enable / Disable Closest Part ..[[]
                                        [6] Anti Ground Shots []] .. ..[[]
                                        [6] Show FOV Circle []] .. ..[[]
                                        
                                
                                        [X] Go back to main menu
]])
xensilmisc = rconsoleinput("")
xensilmiscresponse()
end

function xenresponse()
    if xen == "1" then
        rconsoleclear()
        xencamisx()
        xen = rconsoleinput("")
        xenresponse()
    elseif xen == "X" or aori == "x" then
        game.Players.LocalPlayer:Kick("xen#9999 support")
    elseif xen == "2" then
        rconsoleclear()
        xenmisc()
    elseif xen == "3" then
        rconsoleclear()
         game.Players.LocalPlayer:Kick("coming soon...>_<") 
    else
        rconsoleprint([[Unknown Command
]])
        xen = rconsoleinput("")
        xenresponse()
    end
end

function xencammiscresponse()
    if xencammisc == "1" then
        if getgenv().Notifications == true then
            getgenv().Notifications = false
            notifstatus = "false"
        elseif getgenv().Notifications == false then
            getgenv().Notifications = true
            notifstatus = "true"
        end
        rconsoleclear()
        xencamisx()
    elseif aoricammisc == "2" then
        if getgenv().SmoothnessValue == true then
            getgenv().SmoothnessValue = false
            smoothnessstatus = "false"
        elseif getgenv().SmoothnessValue == false then
            getgenv().SmoothnessValue = true
            smoothnessstatus = "true"
        end
        rconsoleclear()
        xencamisx()
    elseif aoricammisc == "3" then
        rconsoleprint("Smoothness: ")
        smoothnessvalue = rconsoleinput("")
        getgenv().smoothness = tonumber(smoothnessvalue)
        rconsoleclear()
        xencamisx()
    elseif aoricammisc == "4" then
        if getgenv().PredictionState == true then
            getgenv().PredictionState = false
            predictionstatus = "false"
        elseif getgenv().PredictionState == false then
            getgenv().PredictionState = true
            predictionstatus = "true"
        end
        rconsoleclear()
        xencamisx()
    elseif aoricammisc == "5" then
        rconsoleprint("Prediction: ")
        predictionvalue = rconsoleinput("")
        getgenv().prediction = tonumber(predictionvalue)
        rconsoleclear()
        xencamisx()
    elseif aoricammisc == "6" then
        if getgenv().UnlockWhenTargetDies == true then
            getgenv().UnlockWhenTargetDies = false
            unlockwhendeadstatus = "false"
        elseif getgenv().UnlockWhenTargetDies == false then
            getgenv().UnlockWhenTargetDies = true
            unlockwhendeadstatus = "true"
        end
        rconsoleclear()
        xencamisx()
    elseif aoricammisc == "7" then
        if getgenv().UnlockWhenPlayerDies == true then
            getgenv().UnlockWhenPlayerDies = false
            unlockwhenlocalplayerknockedstatus = "false"
        elseif getgenv().UnlockWhenPlayerDies == false then
            getgenv().UnlockWhenPlayerDies = true
            unlockwhenlocalplayerknockedstatus = "true"
        end
        rconsoleclear()
        xencamisx()
    elseif aoricammisc == "8" then
        if getgenv().TracerRadius == true then
            getgenv().TracerRadius = false
            tracewhentargetradiusstatus = "false"
        elseif getgenv().TracerRadius == false then
            getgenv().TracerRadius = true
            tracewhentargetradiusstatus = "true"
        end
        rconsoleclear()
        xencamisx()
    elseif aoricammisc == "9" then
        if FOV_Circle.Visible == true then
            FOV_Circle.Visible = false
            fovcirclestatus = "false"
        elseif FOV_Circle.Visible == false then
            FOV_Circle.Visible = true
            fovcirclestatus = "true"
        end
        rconsoleclear()
        xencamisx()
    elseif xencamisx == "10" then
        rconsoleprint("Keybind: ")
        keybindvalue = rconsoleinput("")
        getgenv().keybind = keybindvalue
        rconsoleclear()
        xencamisx()
    elseif xencamisx == "0" then
        rconsoleprint("FOV: ")
        fovvalue = rconsoleinput("")
        FOV_Circle.Radius = tonumber(fovvalue)
        rconsoleclear()
        xencamisx()
    elseif xencamisx == "X" or xencamisx == "x" then
        rconsoleclear()
        xenmain()
    else
        rconsoleprint([[Unknown Command
]])
        aoricammisc = rconsoleinput("")
        xencammiscresponse()
    end
end

function xensilmiscresponse()
    if aorisilmisc == "0" then
        if getgenv().AorinjectSettings.SilentAim == true then
            getgenv().AorinjectSettings.SilentAim = false
            silentaimstatus = "Disabled"
        elseif getgenv().AorinjectSettings.SilentAim == false then
            getgenv().AorinjectSettings.SilentAim = true
            silentaimstatus = "Enabled"
        end
        rconsoleclear()
        xenmisc()
    elseif aorisilmisc == "1" then
        rconsoleprint("Prediction: ")
        silpredictionvalue = rconsoleinput("")
        getgenv().AorinjectSettings.Prediction = tonumber(silpredictionvalue)
        rconsoleclear()
        xenmisc()
    elseif aorisilmisc == "2" then
        if getgenv().AorinjectSettings.PredictionStatus == true then
            getgenv().AorinjectSettings.PredictionStatus = false
            silpredictionstatus = "Disabled"
        elseif getgenv().AorinjectSettings.PredictionStatus == false then
            getgenv().AorinjectSettings.PredictionStatus = true
            silpredictionstatus = "Enabled"
        end
        rconsoleclear()
        xenmisc()
    elseif aorisilmisc == "3" then
        if getgenv().GrabbedCheck == true then
            getgenv().GrabbedCheck = false
            silgrabbedvalue = "false"
        elseif getgenv().GrabbedCheck == false then
            getgenv().GrabbedCheck = true
            silgrabbedvalue = "true"
        end
        rconsoleclear()
        xenmisc()
    elseif aorisilmisc == "4" then
        if getgenv().KoCheck == true then
            getgenv().KoCheck = false
            silkodcheckstatus = "false"
        elseif getgenv().KoCheck == false then
            getgenv().KoCheck = true
            silkodcheckstatus = "true"
        end
        rconsoleclear()
        xenmisc()
    elseif aorisilmisc == "5" then
        rconsoleprint("FOV: ")
        silentfovvalue = rconsoleinput("")
        getgenv().Aorinject.FOV = tonumber(silentfovvalue)
        rconsoleclear()
        xenmisc()
    elseif aorisilmisc == "6" then
        if getgenv().Aorinject.ShowFOV == true then
            getgenv().Aorinject.ShowFOV = false
            silentfovcirclestatus = "false"
        elseif getgenv().Aorinject.ShowFOV == false then
            getgenv().Aorinject.ShowFOV = true
            silentfovcirclestatus = "true"
        end
        rconsoleclear()
        xenmisc()()
    elseif aorisilmisc == "X" or aorisilmisc == "x" then
        rconsoleclear()
        xenmain()
    else
        rconsoleprint([[Unknown Command
]])
        aorisilmisc = rconsoleinput("")
        xensilmiscresponse()
    end
end

local __index
__index = hookmetamethod(game, "__index", function(t, k)
    if (t:IsA("Mouse") and (k == "Hit" or k == "Target") and Aorinject.Check()) then
        local SelectedPart = Aorinject.SelectedPart
        if (getgenv().AorinjectSettings.SilentAim and (k == "Hit" or k == "Target")) then
            local Hit = SelectedPart.CFrame + (SelectedPart.Velocity * getgenv().AorinjectSettings.Prediction)
            return (k == "Hit" and Hit or SelectedPart)
        end
    end
    return __index(t, k)
end)

rconsoleclear()
xenmain()
